from django.db import models
from django.db.models.signals import post_save
from django.contrib.auth.models import User
from django.dispatch import receiver


class Profile(models.Model):
    """
    User Profile Model 
    """

    LANGUAGES = [
        ('Afar', 'Afar'),
        ('Abkhazian', 'Abkhazian'),
        ('Afrikaans', 'Afrikaans'),
        ('Akan', 'Akan'),
        ('Albanian', 'Albanian'),
        ('Amharic', 'Amharic'),
        ('Arabic', 'Arabic'),
        ('Aragonese', 'Aragonese'),
        ('Armenian', 'Armenian'),
        ('Assamese', 'Assamese'),
        ('Avaric', 'Avaric'),
        ('Avestan', 'Avestan'),
        ('Aymara', 'Aymara'),
        ('Azerbaijani', 'Azerbaijani'),
        ('Bashkir', 'Bashkir'),
        ('Bambara', 'Bambara'),
        ('Basque', 'Basque'),
        ('Belarusian', 'Belarusian'),
        ('Bengali', 'Bengali'),
        ('Bihari languages', 'Bihari languages'),
        ('Bislama', 'Bislama'),
        ('Tibetan', 'Tibetan'),
        ('Bosnian', 'Bosnian'),
        ('Breton', 'Breton'),
        ('Bulgarian', 'Bulgarian'),
        ('Burmese', 'Burmese'),
        ('Catalan; Valencian', 'Catalan; Valencian'),
        ('Czech', 'Czech'),
        ('Chamorro', 'Chamorro'),
        ('Chechen', 'Chechen'),
        ('Chinese', 'Chinese'),
        ('Chuvash', 'Chuvash'),
        ('Cornish', 'Cornish'),
        ('Corsican', 'Corsican'),
        ('Cree', 'Cree'),
        ('Welsh', 'Welsh'),
        ('Czech', 'Czech'),
        ('Danish', 'Danish'),
        ('German', 'German'),
        ('Divehi; Dhivehi; Maldivian', 'Divehi; Dhivehi; Maldivian'),
        ('Dutch; Flemish', 'Dutch; Flemish'),
        ('Dzongkha', 'Dzongkha'),
        ('Greek, Modern (1453-)', 'Greek, Modern (1453-)'),
        ('English', 'English'),
        ('Esperanto', 'Esperanto'),
        ('Estonian', 'Estonian'),
        ('Basque', 'Basque'),
        ('Ewe', 'Ewe'),
        ('Faroese', 'Faroese'),
        ('Persian', 'Persian'),
        ('Fijian', 'Fijian'),
        ('Finnish', 'Finnish'),
        ('French', 'French'),
        ('Western Frisian', 'Western Frisian'),
        ('Fulah', 'Fulah'),
        ('Georgian', 'Georgian'),
        ('German', 'German'),
        ('Gaelic; Scottish Gaelic', 'Gaelic; Scottish Gaelic'),
        ('Irish', 'Irish'),
        ('Galician', 'Galician'),
        ('Manx', 'Manx'),
        ('Greek, Modern (1453-)', 'Greek, Modern (1453-)'),
        ('Guarani', 'Guarani'),
        ('Gujarati', 'Gujarati'),
        ('Haitian; Haitian Creole', 'Haitian; Haitian Creole'),
        ('Hausa', 'Hausa'),
        ('Hebrew', 'Hebrew'),
        ('Herero', 'Herero'),
        ('Hindi', 'Hindi'),
        ('Hiri Motu', 'Hiri Motu'),
        ('Croatian', 'Croatian'),
        ('Hungarian', 'Hungarian'),
        ('Armenian', 'Armenian'),
        ('Igbo', 'Igbo'),
        ('Icelandic', 'Icelandic'),
        ('Ido', 'Ido'),
        ('Sichuan Yi; Nuosu', 'Sichuan Yi; Nuosu'),
        ('Inuktitut', 'Inuktitut'),
        ('Interlingue; Occidental', 'Interlingue; Occidental'),
        ('Indonesian', 'Indonesian'),
        ('Inupiaq', 'Inupiaq'),
        ('Icelandic', 'Icelandic'),
        ('Italian', 'Italian'),
        ('Javanese', 'Javanese'),
        ('Japanese', 'Japanese'),
        ('Kalaallisut; Greenlandic', 'Kalaallisut; Greenlandic'),
        ('Kannada', 'Kannada'),
        ('Kashmiri', 'Kashmiri'),
        ('Georgian', 'Georgian'),
        ('Kanuri', 'Kanuri'),
        ('Kazakh', 'Kazakh'),
        ('Central Khmer', 'Central Khmer'),
        ('Kikuyu; Gikuyu', 'Kikuyu; Gikuyu'),
        ('Kinyarwanda', 'Kinyarwanda'),
        ('Kirghiz; Kyrgyz', 'Kirghiz; Kyrgyz'),
        ('Komi', 'Komi'),
        ('Kongo', 'Kongo'),
        ('Korean', 'Korean'),
        ('Kuanyama; Kwanyama', 'Kuanyama; Kwanyama'),
        ('Kurdish', 'Kurdish'),
        ('Lao', 'Lao'),
        ('Latin', 'Latin'),
        ('Latvian', 'Latvian'),
        ('Limburgan; Limburger; Limburgish', 'Limburgan; Limburger; Limburgish'),
        ('Lingala', 'Lingala'),
        ('Lithuanian', 'Lithuanian'),
        ('Luxembourgish; Letzeburgesch', 'Luxembourgish; Letzeburgesch'),
        ('Luba-Katanga', 'Luba-Katanga'),
        ('Ganda', 'Ganda'),
        ('Macedonian', 'Macedonian'),
        ('Marshallese', 'Marshallese'),
        ('Malayalam', 'Malayalam'),
        ('Maori', 'Maori'),
        ('Marathi', 'Marathi'),
        ('Malay', 'Malay'),
        ('Micmac', 'Micmac'),
        ('Macedonian', 'Macedonian'),
        ('Malagasy', 'Malagasy'),
        ('Maltese', 'Maltese'),
        ('Mongolian', 'Mongolian'),
        ('Maori', 'Maori'),
        ('Malay', 'Malay'),
        ('Burmese', 'Burmese'),
        ('Nauru', 'Nauru'),
        ('Navajo; Navaho', 'Navajo; Navaho'),
        ('Ndebele, South; South Ndebele', 'Ndebele, South; South Ndebele'),
        ('Ndebele, North; North Ndebele', 'Ndebele, North; North Ndebele'),
        ('Ndonga', 'Ndonga'),
        ('Nepali', 'Nepali'),
        ('Dutch; Flemish', 'Dutch; Flemish'),
        ('Norwegian Nynorsk', 'Norwegian Nynorsk'),
        ('Bokm책l, Norwegian', 'Bokm책l, Norwegian'),
        ('Norwegian', 'Norwegian'),
        ('Occitan (post 1500)', 'Occitan (post 1500)'),
        ('Ojibwa', 'Ojibwa'),
        ('Oriya', 'Oriya'),
        ('Oromo', 'Oromo'),
        ('Ossetian; Ossetic', 'Ossetian; Ossetic'),
        ('Panjabi; Punjabi', 'Panjabi; Punjabi'),
        ('Persian', 'Persian'),
        ('Pali', 'Pali'),
        ('Polish', 'Polish'),
        ('Portuguese', 'Portuguese'),
        ('Pushto; Pashto', 'Pushto; Pashto'),
        ('Quechua', 'Quechua'),
        ('Romansh', 'Romansh'),
        ('Romanian; Moldavian; Moldovan', 'Romanian; Moldavian; Moldovan'),
        ('Romanian; Moldavian; Moldovan', 'Romanian; Moldavian; Moldovan'),
        ('Rundi', 'Rundi'),
        ('Russian', 'Russian'),
        ('Sango', 'Sango'),
        ('Sanskrit', 'Sanskrit'),
        ('Sinhala; Sinhalese', 'Sinhala; Sinhalese'),
        ('Slovak', 'Slovak'),
        ('Slovak', 'Slovak'),
        ('Slovenian', 'Slovenian'),
        ('Northern Sami', 'Northern Sami'),
        ('Samoan', 'Samoan'),
        ('Shona', 'Shona'),
        ('Sindhi', 'Sindhi'),
        ('Somali', 'Somali'),
        ('Sotho, Southern', 'Sotho, Southern'),
        ('Spanish; Castilian', 'Spanish; Castilian'),
        ('Albanian', 'Albanian'),
        ('Sardinian', 'Sardinian'),
        ('Serbian', 'Serbian'),
        ('Swati', 'Swati'),
        ('Sundanese', 'Sundanese'),
        ('Swahili', 'Swahili'),
        ('Swedish', 'Swedish'),
        ('Tahitian', 'Tahitian'),
        ('Tamil', 'Tamil'),
        ('Tatar', 'Tatar'),
        ('Telugu', 'Telugu'),
        ('Tajik', 'Tajik'),
        ('Tagalog', 'Tagalog'),
        ('Thai', 'Thai'),
        ('Tibetan', 'Tibetan'),
        ('Tigrinya', 'Tigrinya'),
        ('Tonga (Tonga Islands)', 'Tonga (Tonga Islands)'),
        ('Tswana', 'Tswana'),
        ('Tsonga', 'Tsonga'),
        ('Turkmen', 'Turkmen'),
        ('Turkish', 'Turkish'),
        ('Twi', 'Twi'),
        ('Uighur; Uyghur', 'Uighur; Uyghur'),
        ('Ukrainian', 'Ukrainian'),
        ('Urdu', 'Urdu'),
        ('Uzbek', 'Uzbek'),
        ('Venda', 'Venda'),
        ('Vietnamese', 'Vietnamese'),
        ('Volap체k', 'Volap체k'),
        ('Welsh', 'Welsh'),
        ('Walloon', 'Walloon'),
        ('Wolof', 'Wolof'),
        ('Xhosa', 'Xhosa'),
        ('Yiddish', 'Yiddish'),
        ('Yoruba', 'Yoruba'),
        ('Zhuang; Chuang', 'Zhuang; Chuang'),
        ('Chinese', 'Chinese'),
        ('Zulu', 'Zulu')
    ]

    owner = models.OneToOneField(User, on_delete=models.CASCADE)
    name = models.CharField(max_length=200, blank=True)
    date_of_birth = models.DateField(blank=True, null=True)
    language = models.CharField(max_length=50, choices=LANGUAGES, blank=True)
    image = models.ImageField(
        upload_to='images/', default='../default_profile_pi4td5.jpg') 
    created_on = models.DateTimeField(auto_now_add=True)
    updated_on = models.DateTimeField(auto_now=True)

    class Meta:
        """
        Return profile where the newest are the first
        """
        ordering = ['-created_on']

    def __str__(self):
        return f"{self.owner}'s profile"

    def create_profile(sender, instance, created, **kwargs):
        if created:
            Profile.objects.create(owner=instance)

    post_save.connect(create_profile, sender=User)